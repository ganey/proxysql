name: CI-package-build

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      trigger:
        type: string

env:
  SHA: ${{ fromJson(inputs.trigger).event.workflow_run.head_sha || github.sha }}
  BIN_PKG:

jobs:
  clean:
    runs-on: ubuntu-22.04
    steps:
    - name: Clean packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # gh release delete-asset ${SHA}-head
        gh release delete ${SHA}-head --repo ${{ github.repository }} --cleanup-tag || true
        gh release create ${SHA}-head --repo ${{ github.repository }} --title ${SHA}-head --draft --prerelease --notes-file - << EOF
        ## Development Snapshot
        
        GH-Action Package-Build on PR merge into ${SHA}
        
        Version : **${GIT_VERSION}**
        
        Started : **$(date '+%Y-%m-%d %H:%M:%S %Z')**
        
        Status : **Build in progress**
        
        [![CI-Package-Build](https://github.com/${{ github.repository }}/actions/workflows/CI-package-build.yml/badge.svg)](https://github.com/${{ github.repository }}/actions/workflows/CI-package-build.yml)
        
        EOF
   
  build:
    runs-on: ubuntu-22.04
    needs: [ clean ]
    strategy:
      fail-fast: false
      matrix:
#        dist: [ 'centos7' ]
        dist: [ 'almalinux8','almalinux9','centos7','centos8','centos9','debian10','debian11','debian12','fedora38','fedora39','fedora40','fedora41','opensuse15','ubuntu16','ubuntu18','ubuntu20','ubuntu22','ubuntu24' ]
        type: [ '','-dbg','-clang' ]
        exclude:
#         broken - clang too old
          - dist: 'centos7'
            type: '-clang'
          - dist: 'debian10'
            type: '-clang'
          - dist: 'ubuntu16'
            type: '-clang'
          - dist: 'ubuntu18'
            type: '-clang'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        ref: ${{ env.SHA }}
        fetch-depth: 0
      
    - name: Set GIT_VERSION
      run: |
        git fetch --tags --force
        echo "GIT_VERSION=$(git describe --long --abbrev=7)" >> $GITHUB_ENV
    
    - name: Update release
      if: ${{ !cancelled() }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [[ "${{ matrix.dist }}" = "centos9" ]] && [[ "${{ matrix.type }}" = "" ]]; then
        gh release edit ${SHA}-head --draft --prerelease --repo ${{ github.repository }} --tag ${SHA}-head --title "${SHA}-head - ${GIT_VERSION}" --notes-file - << EOF
        ## Development Snapshot
        
        GH-Action Package-Build on PR merge into ${SHA}
        
        Version : **${GIT_VERSION}**
        
        Updated : **$(date '+%Y-%m-%d %H:%M:%S %Z')**
        
        Status : **Build in progress**
        
        [![CI-Package-Build](https://github.com/${{ github.repository }}/actions/workflows/CI-package-build.yml/badge.svg)](https://github.com/${{ github.repository }}/actions/workflows/CI-package-build.yml)
        
        EOF
        fi
    
    - name: Build package
      run: |
        make ${{ matrix.dist }}${{ matrix.type }}
        echo "BIN_PKG=$(ls -1 binaries/*[mb])" >> $GITHUB_ENV
        echo "BIN_HASH=$(ls -1 binaries/*.id-hash)" >> $GITHUB_ENV

    - name: Push packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # git tag --force -a ${SHA}-head -m 'GH-Actions - Development Snapshot Build'
        # git push origin --tags
        # gh release upload ${SHA}-head --repo ${{ github.repository }} --clobber binaries/proxysql*${{ matrix.dist }}*[mb]
        gh release upload ${SHA}-head --repo ${{ github.repository }} --clobber ${{ env.BIN_PKG }}
 
  finalize:
    runs-on: ubuntu-22.04
    needs: [ build ]
    steps:
    - name: Update release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        GIT_VERSION=$(gh release --repo ${{ github.repository }} view ${SHA}-head | tr -d '*' | grep -Po "(?<=Version : ).*")
        gh release edit ${SHA}-head --draft --prerelease --repo ${{ github.repository }} --tag ${SHA}-head --notes-file - << EOF
        ## Development Snapshot
        
        GH-Action Package-Build on PR merge into ${SHA}
        
        Version : **${GIT_VERSION}**
        
        Finished : **$(date '+%Y-%m-%d %H:%M:%S %Z')**
        
        Status : **Build is finished**
        
        [![CI-Package-Build](https://github.com/${{ github.repository }}/actions/workflows/CI-package-build.yml/badge.svg)](https://github.com/${{ github.repository }}/actions/workflows/CI-package-build.yml)
        
        EOF
        
