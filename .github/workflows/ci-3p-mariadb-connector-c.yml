name: CI-3p-mariadb-connector-c

on:
  workflow_dispatch:
  workflow_call:

env:
  TESTNAME: mariadb-connector-c
#  TESTDIST: debian11
#  INFRADB:  mysql57
#  BASELINE: ${{ vars.BASELINE_3P_MARIADB_CONNECTOR_C }}

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        testdist: [ 'debian11' ]
        infradb: [ 'mysql57', 'mysql80', 'mysql81', 'mysql82', 'mariadb10', 'mariadb11' ]
    env:
      TESTDIST: ${{ matrix.testdist }}
      INFRADB:  ${{ matrix.infradb }}
#      BLDCACHE: CI-builds_${{ github.sha }}_${{ matrix.testdist }}_bin
      BLDCACHE: ${{ github.sha }}_${{ matrix.testdist }}_bin
      BASELINE: ${{ vars[format('BASELINE_3P_MARIADB_CONNECTOR_C_{0}', matrix.infradb)] }}
      
    steps:
        
    - name: Checkout proxysql_3p_testing
      uses: actions/checkout@v4
      with:
        repository: 'proxysql/proxysql_3p_testing'
        ref: 'main'
        fetch-depth: 1
        path: 'proxysql_3p_testing'
        token: ${{ secrets.GH_TOKEN }}
        sparse-checkout: |
          test_mariadb-connector-c
          proxysql

    - name: Wait for cache
      env:
        GH_TOKEN: ${{ secrets.gh_token }}
      run: |
        echo "BASELINE: '${BASELINE}'"
        echo "Wating for cache '${BLDCACHE}' ..."
        sleep $(( $RANDOM / 1024 ))
        PROBE="$(gh cache list --limit 300 --repo sysown/proxysql | grep -i ${BLDCACHE} || echo '')"
        while [[ -z ${PROBE} ]]; do
          echo "Wating for cache '${BLDCACHE}' ..."
          sleep 30
          PROBE="$(gh cache list --limit 300 --repo sysown/proxysql | grep -i ${BLDCACHE} || echo '')"
        done
        echo "Cache available '${BLDCACHE}'"

    - name: Cache restore bin
      uses: actions/cache/restore@v4
      with:
        key: ${{ env.BLDCACHE }}
        fail-on-cache-miss: true
        path: |
          proxysql/binaries/
        
    - name: Prepare
      run: |
        set +e
        
        cd proxysql_3p_testing/
        git sparse-checkout list
        ./setup.sh
        git -C ./proxysql switch v2.x
        git -C ./proxysql pull --tags
        
        # extend timout
        cd test_mariadb-connector-c
        sed -i 's/timeout -v -s1 800 //' run-tests.bash
        
        # set tested database infra
        sed -i 's/^fn_test_proxysql m/#fn_test_proxysql m/' run-tests.bash
        sed -i 's/^fn_test_proxysql_dev m/#fn_test_proxysql_dev m/' run-tests.bash
        sed -i '/^fn_start_prep$/a fn_test_proxysql_dev ${{ matrix.infradb }}' run-tests.bash

    - name: Run tests
      run: |
        set +e
        
        cd proxysql_3p_testing/test_mariadb-connector-c
        sed -i 's/docker-compose/docker compose/g' run-tests.bash
        ./run-tests.bash
        RC=$?
        
        #sudo chmod -R 777 ${{ github.workspace }}/*
        exit $RC
        
    - name: Check baseline
      env:
        GH_TOKEN: ${{ secrets.gh_token }}
      run: |
        cd proxysql_3p_testing/test_mariadb-connector-c
        
        FAILS=$(cat logs/*run-tests.log | grep 'FAIL' | grep ' / ' | awk '{ print $2 }')
        if [[ -z ${FAILS} ]]; then
          echo "Baseline '${BASELINE:-10000}' WARN: no results found"
          exit 0
        fi
        
        if [[ ${FAILS} -gt ${BASELINE:-10000} ]]; then
          echo "Baseline '${BASELINE:-10000}' FAIL: FAILS = ${FAILS}"
          exit 1
        else
          echo "Baseline '${BASELINE:-10000}' PASS: FAILS = ${FAILS}"
          if [[ ${{ github.ref_name }} == v2.x ]]; then
            gh variable -R sysown/proxysql set BASELINE_3P_MARIADB_CONNECTOR_C_${{ matrix.infradb }} -b "${FAILS}"
          fi
        fi
    
    - name: Archive artifacts logs
      if: ${{ failure() && !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.workflow }}-${{ github.sha }}-${{ matrix.infradb }}-logs-run#${{ github.run_number }}
        path: |
          proxysql_3p_testing/test_mariadb-connector-c/logs
          
          
